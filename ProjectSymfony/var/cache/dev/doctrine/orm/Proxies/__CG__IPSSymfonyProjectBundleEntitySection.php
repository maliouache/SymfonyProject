<?php

namespace Proxies\__CG__\IPS\SymfonyProjectBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Section extends \IPS\SymfonyProjectBundle\Entity\Section implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'id', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'nAME', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'iMPORTANCE', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'cOMMENT', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'aDDDATE', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'sTATUT', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'eNDDATE', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'PROJECT'];
        }

        return ['__isInitialized__', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'id', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'nAME', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'iMPORTANCE', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'cOMMENT', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'aDDDATE', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'sTATUT', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'eNDDATE', '' . "\0" . 'IPS\\SymfonyProjectBundle\\Entity\\Section' . "\0" . 'PROJECT'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Section $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setPROJECT(\IPS\SymfonyProjectBundle\Entity\Project $project)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPROJECT', [$project]);

        return parent::setPROJECT($project);
    }

    /**
     * {@inheritDoc}
     */
    public function getPROJECT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPROJECT', []);

        return parent::getPROJECT();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNAME($nAME)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNAME', [$nAME]);

        return parent::setNAME($nAME);
    }

    /**
     * {@inheritDoc}
     */
    public function getNAME()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNAME', []);

        return parent::getNAME();
    }

    /**
     * {@inheritDoc}
     */
    public function setIMPORTANCE($iMPORTANCE)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIMPORTANCE', [$iMPORTANCE]);

        return parent::setIMPORTANCE($iMPORTANCE);
    }

    /**
     * {@inheritDoc}
     */
    public function getIMPORTANCE()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIMPORTANCE', []);

        return parent::getIMPORTANCE();
    }

    /**
     * {@inheritDoc}
     */
    public function setCOMMENT($cOMMENT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCOMMENT', [$cOMMENT]);

        return parent::setCOMMENT($cOMMENT);
    }

    /**
     * {@inheritDoc}
     */
    public function getCOMMENT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCOMMENT', []);

        return parent::getCOMMENT();
    }

    /**
     * {@inheritDoc}
     */
    public function setADDDATE($aDDDATE)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setADDDATE', [$aDDDATE]);

        return parent::setADDDATE($aDDDATE);
    }

    /**
     * {@inheritDoc}
     */
    public function getADDDATE()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getADDDATE', []);

        return parent::getADDDATE();
    }

    /**
     * {@inheritDoc}
     */
    public function setSTATUT($sTATUT)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSTATUT', [$sTATUT]);

        return parent::setSTATUT($sTATUT);
    }

    /**
     * {@inheritDoc}
     */
    public function getSTATUT()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSTATUT', []);

        return parent::getSTATUT();
    }

    /**
     * {@inheritDoc}
     */
    public function setENDDATE($eNDDATE)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setENDDATE', [$eNDDATE]);

        return parent::setENDDATE($eNDDATE);
    }

    /**
     * {@inheritDoc}
     */
    public function getENDDATE()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getENDDATE', []);

        return parent::getENDDATE();
    }

    /**
     * {@inheritDoc}
     */
    public function init($name, $importance, $comment, $project)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'init', [$name, $importance, $comment, $project]);

        return parent::init($name, $importance, $comment, $project);
    }

}
